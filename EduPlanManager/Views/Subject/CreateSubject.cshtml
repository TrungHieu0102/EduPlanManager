@model EduPlanManager.Models.DTOs.Subject.SubjectCreateDTO
<h2 class="text-center py-4">Tạo mới môn học</h2>
<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10 col-xl-8">
            <div class="border overflow-hidden p-4 p-md-5">
                <form asp-action="CreateSubject" method="post">
                    @Html.AntiForgeryToken()
                    <div class="row gy-4 gy-xl-5">
                        <div class="col-12 col-md-6">
                            <label asp-for="Code" class="form-label">Mã môn học</label>
                            <input asp-for="Code" type="text" class="form-control" />
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="Name" class="form-label">Tên môn học</label>
                            <input asp-for="Name" type="text" class="form-control" />
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="AcademicTermId" class="form-label">Danh sách học kỳ</label>
                            <select asp-for="AcademicTermId" id="AcademicTermId" class="form-select" onchange="updateDateRange()">
                                <option value="">Chọn kỳ học</option>
                                @if (ViewBag.AcademicTerm != null)
                                {
                                    foreach (var term in ViewBag.AcademicTerm)
                                    {
                                        <option value="@term.Id"
                                                data-startdate="@term.StartDate"
                                                data-enddate="@term.EndDate">
                                            Học kỳ @term.Semester Năm @term.Year
                                        </option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.AcademicTermId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="CategoryId" class="form-label">Danh mục môn học</label>
                            <select asp-for="CategoryId" class="form-select">
                                <option value="">Chọn danh mục</option>
                                @if (ViewBag.CategoryName != null)
                                {
                                    foreach (var category in ViewBag.CategoryName)
                                    {
                                        <option value="@category.Id">@category.FullName</option>
                                    }
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="StartDate" class="form-label">Ngày bắt đầu</label>
                            <input asp-for="StartDate" type="date" class="form-control" id="StartDate" />
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="EndDate" class="form-label">Ngày kết thúc</label>
                            <input asp-for="EndDate" type="date" class="form-control" id="EndDate" />
                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-12 col-md-6">
                            <label asp-for="LessonsPerDay" class="form-label">Số tiết mỗi buổi</label>
                            <input asp-for="LessonsPerDay" type="number" class="form-control" min="1" max="10" />
                            @Html.ValidationMessageFor(model => model.LessonsPerDay, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="TeacherDropdown" class="form-label">Giảng viên</label>

                            <!-- Ô tìm kiếm và chọn -->
                            <div class="dropdown">
                                <input type="text"
                                       id="TeacherSearch"
                                       class="form-control dropdown-toggle"
                                       placeholder="Tìm kiếm giảng viên..."
                                       data-bs-toggle="dropdown"
                                       aria-expanded="false"
                                       autocomplete="off" />

                                <ul id="TeacherList" class="dropdown-menu w-100" aria-labelledby="TeacherSearch">
                                    @if (ViewBag.Teachers != null)
                                    {
                                        foreach (var teacher in ViewBag.Teachers)
                                        {
                                            <li>
                                                <button type="button"
                                                        class="dropdown-item"
                                                        data-value="@teacher.Id">
                                                    @teacher.FullName
                                                </button>
                                            </li>
                                        }
                                    }
                                </ul>

                                <input type="hidden" asp-for="TeacherId" id="SelectedTeacher" />
                            </div>

                            @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Nút Tạo mới -->
                        <div class="col-12">
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary btn-lg">Tạo mới</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function updateDateRange() {
            const termSelect = document.getElementById("AcademicTermId");
            const selectedOption = termSelect.options[termSelect.selectedIndex];

            const startDate = selectedOption.getAttribute("data-startdate");
            const endDate = selectedOption.getAttribute("data-enddate");

            const startDateInput = document.getElementById("StartDate");
            const endDateInput = document.getElementById("EndDate");

            if (startDate && endDate) {
                startDateInput.setAttribute("min", startDate);
                startDateInput.setAttribute("max", endDate);

                endDateInput.setAttribute("min", startDate);
                endDateInput.setAttribute("max", endDate);
            } else {
                startDateInput.removeAttribute("min");
                startDateInput.removeAttribute("max");

                endDateInput.removeAttribute("min");
                endDateInput.removeAttribute("max");
            }
        }

        document.getElementById("AcademicTermId").addEventListener("change", updateDateRange);
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById("TeacherSearch");
            const teacherList = document.getElementById("TeacherList");
            const selectedTeacher = document.getElementById("SelectedTeacher");

            searchInput.addEventListener("input", function () {
                const filter = searchInput.value.toLowerCase();
                const items = teacherList.getElementsByClassName("dropdown-item");

                Array.from(items).forEach(item => {
                    const text = item.textContent || item.innerText;
                    if (text.toLowerCase().includes(filter)) {
                        item.style.display = "block";
                    } else {
                        item.style.display = "none";
                    }
                });
                teacherList.classList.add("show");
            });

            teacherList.addEventListener("click", function (e) {
                const item = e.target;
                if (item.tagName === "BUTTON") {
                    searchInput.value = item.textContent;

                    selectedTeacher.value = item.getAttribute("data-value");

                    teacherList.classList.remove("show");
                }
            });

            document.addEventListener("click", function (e) {
                if (!searchInput.contains(e.target) && !teacherList.contains(e.target)) {
                    teacherList.classList.remove("show");
                }
            });
        });
    </script>

}
